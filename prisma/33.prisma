model com_cotacao {
  id                String  @id @default(cuid())
  empresa           Int
  pedido_cotacao    Int                 @unique
  com_cotacao_itens com_cotacao_itens[]
}

model com_cotacao_itens {
  pedido_cotacao Int
  emissao        DateTime?
  pro_codigo     Int
  pro_descricao  String
  mar_descricao  String?
  referencia     String?
  unidade        String?
  quantidade     Int
  com_cotacao    com_cotacao @relation(fields: [pedido_cotacao], references: [pedido_cotacao], onDelete: Cascade)

  @@id([pedido_cotacao, pro_codigo])
}

model com_usuarios {
  usuario_id Int    @id @default(autoincrement())
  nome       String
  email      String @unique
  senha      String
  trash      Int    @default(0)
}

model ofi_checklists {
  id                           String                   @id @default(cuid())
  osInterna                    String?
  dataHoraEntrada              DateTime?
  observacoes                  String?
  combustivelPercentual        Int?
  clienteNome                  String?
  clienteDoc                   String?
  clienteTel                   String?
  clienteEnd                   String?
  veiculoNome                  String?
  veiculoPlaca                 String?
  veiculoCor                   String?
  veiculoKm                    BigInt?
  createdAt                    DateTime                 @default(now())
  updatedAt                    DateTime                 @updatedAt
  assinaturasclienteBase64     String?
  assinaturasresponsavelBase64 String?

  // relação 1:N
  ofi_checklists_avarias ofi_checklists_avarias[]
  ofi_checklists_items   ofi_checklists_items[]
}

model ofi_checklists_avarias {
  id             String                   @id @default(cuid())
  checklistId    String
  tipo           String?
  peca           String?
  observacoes    String?
  posX           Float?
  posY           Float?
  posZ           Float?
  normX          Float?
  normY          Float?
  normZ          Float?
  fotoBase64     String?
  timestamp      DateTime?
  ofi_checklists ofi_checklists @relation(fields: [checklistId], references: [id], onDelete: Cascade)

  @@index([checklistId])
}

model ofi_checklists_items {
  id            String         @id @default(cuid())
  checklistId   String
  item          String
  status        String
  ofi_checklists ofi_checklists @relation(fields: [checklistId], references: [id], onDelete: Cascade)

  @@index([checklistId])
}

model com_cotacao_for {
  id              String   @id @default(cuid())
  empresa         Int      @default(3)
  pedido_cotacao  Int
  for_codigo      Int
  for_nome        String?
  cpf_cnpj        String?
  itens           com_cotacao_itens_for[]

  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt

  // permite múltiplos fornecedores por pedido
  @@unique([pedido_cotacao, for_codigo], name: "pedido_for")
  @@index([pedido_cotacao])
}

model com_cotacao_itens_for {
  id              String   @id @default(cuid())
  pedido_cotacao  Int
  for_codigo      Int
  emissao         DateTime?
  pro_codigo      Int
  pro_descricao   String
  mar_descricao   String?
  referencia      String?
  unidade         String?
  quantidade      Int
  valor_unitario  Float?

  cotacao com_cotacao_for @relation(fields: [pedido_cotacao, for_codigo], references: [pedido_cotacao, for_codigo], onDelete: Cascade)

  @@index([pedido_cotacao, for_codigo])
}